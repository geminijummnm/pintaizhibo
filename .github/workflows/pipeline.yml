name: M3U Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  generate-sources:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Generate URL files
      env:
        BASE_URL: ${{ secrets.BASE_URL }}
        JSON_URL: ${{ secrets.JSON_URL }}
      run: |
        mkdir -p sources/url
        python scripts/generate_sources.py
        echo "生成的URL文件："
        tree sources/url/

    - uses: actions/upload-artifact@v4
      with:
        name: url-files
        path: sources/url/

  build-m3u:
    needs: generate-sources
    runs-on: ubuntu-latest
    env:
      WORKSPACE: "/home/runner/work/pintaizhibo"  # 声明全局变量
    steps:
    - uses: actions/checkout@v4
    
    - name: Download URL files
      uses: actions/download-artifact@v4
      with:
        name: url-files
        path: sources/url

    - name: Setup Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y jq tree

    - name: Process M3U
      run: |
        # 定义绝对路径
        M3U_DIR="${WORKSPACE}/m3u"
        REPO_DIR="${WORKSPACE}/pintaizhibo"
        URL_DIR="${REPO_DIR}/sources/url"

        # 强制创建并验证目录
        mkdir -p "${M3U_DIR}"
        echo "🛠️ 目录权限验证"
        ls -ld "${M3U_DIR}"
        touch "${M3U_DIR}/testfile" && rm "${M3U_DIR}/testfile"

        # 运行处理脚本
        chmod +x "${REPO_DIR}/scripts/process_m3u.sh"
        "${REPO_DIR}/scripts/process_m3u.sh"

        # 结果验证（关键步骤）
        echo "=== 生成文件列表 ==="
        ls -l "${M3U_DIR}"
        echo "=== 文件数量 ==="
        find "${M3U_DIR}" -name "*.m3u" | wc -l

    - name: Upload M3U Files
      uses: actions/upload-artifact@v4
      with:
        name: m3u-output
        path: ${{ env.WORKSPACE }}/m3u  # 使用绝对路径
